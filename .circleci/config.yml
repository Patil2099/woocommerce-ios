version: 2.1

orbs:
  # Using 1.0 of the Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  ios: wordpress-mobile/ios@1.0
  git: wordpress-mobile/git@1.0
  slack: circleci/slack@3.4.2

commands:
  fix-image:
    steps:
      - run:
          name: CI Image
          command: |
            # A placeholder command that fixes any issues present on the CircleCI box â€“ there's often something wrong with it,
            # so preserving this step (even if empty) makes the diffs simpler.
            if [ $(echo $PATH | ruby -e "puts Kernel.gets.include?('/usr/local/bin')") != "true" ]; then
              echo 'export PATH=/usr/local/bin:$PATH' >> $BASH_ENV
              echo "Manually added `/usr/local/bin` to the $PATH:"
              echo $PATH
            fi
            chruby ruby-2.6.6
            gem install bundler

            # Add support for fetching SPM packages from GitHub
            for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts

jobs:
  Build Tests:
    executor:
      name: ios/default
      xcode-version: "12.0.0"
    steps:
      - git/shallow-checkout
      - fix-image
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Build for Testing
          command: bundle exec fastlane build_for_testing
      - persist_to_workspace:
          root: ./
          paths:
            - DerivedData/Build/Products
            - vendor/bundle
  
  Unit Tests:
    executor:
      name: ios/default
      xcode-version: "12.0.0"
    steps:
      - git/shallow-checkout
      - fix-image
      - ios/boot-simulator:
          xcode-version: "12.0.0"
          device: iPhone 11
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - ios/wait-for-simulator
      - run:
          name: Run Unit Tests
          command: bundle exec fastlane test_without_building name:UnitTests try_count:3
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
  UI Tests:
    parameters:
      device:
        type: string
      post-to-slack:
        description: Post to Slack when tests fail. SLACK_WEBHOOK ENV variable must be set.
        type: boolean
        default: false
    executor:
      name: ios/default
      xcode-version: "12.0.0"
    steps:
      - git/shallow-checkout
      - fix-image
      - ios/boot-simulator:
          xcode-version: "12.0.0"
          device: << parameters.device >>
      - attach_workspace:
          at: ./
      - run:
          name: Prepare Bundle
          command: bundle --path vendor/bundle
      - run:
          name: Run mocks
          command: ./WooCommerce/WooCommerceUITests/Mocks/scripts/start.sh 8282
          background: true
      - ios/wait-for-simulator
      - run:
          name: Run UI Tests
          command: bundle exec fastlane test_without_building name:UITests
      - ios/save-xcodebuild-artifacts:
          result-bundle-path: build/results
      - when:
          condition: << parameters.post-to-slack >>
          steps:
            - run:
                name: Prepare Slack message
                when: always
                command: |
                  # Get the name of the device that is running. Using "<< parameters.device >>" can cause slack formatting errors.
                  DEVICE_NAME=$(xcrun simctl list -j | jq -r --arg UDID $SIMULATOR_UDID '.devices[] | .[] | select(.udid == "\($UDID)") | .name')
                  echo "export SLACK_FAILURE_MESSAGE=':red_circle: WooCommerce iOS UI tests failed on ${DEVICE_NAME} in \`${CIRCLE_BRANCH}\` branch by ${CIRCLE_USERNAME}.\n\nPlease reach out in #platform9 if you think this failure is not caused by your changes, so we can investigate.'" >> $BASH_ENV
            - slack/status:
                fail_only: true
                include_job_number_field: false
                include_project_field: false
                failure_message: '${SLACK_FAILURE_MESSAGE}'
  Installable Build:
    executor:
      name: ios/default
      xcode-version: "12.0.0"
    steps:
      - git/shallow-checkout
      - fix-image
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run:
          name: Build
          command: "bundle exec fastlane build_and_upload_installable_build build_number:$CIRCLE_BUILD_NUM"
      - run:
          name: Prepare Artifacts
          command: |
            mkdir -p Artifacts
            mv "fastlane/comment.json" "Artifacts/comment.json"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts
  Release Build:
    executor: 
      name: ios/default
      xcode-version: "12.0.0"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - git/shallow-checkout
      - fix-image
      - ios/install-dependencies:
            bundle-install: true
            pod-install: true
      - run: 
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - run: 
          name: Install other tools
          command: |
            brew install imagemagick
            brew install ghostscript
            curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Build
          command: |
            APP_VERSION=$(cat ./config/Version.Public.xcconfig | grep "^VERSION_LONG" | cut -d "=" -f2)
            echo "export SLACK_FAILURE_MESSAGE=':red_circle: Build for WooCommerce iOS $APP_VERSION failed!'" >> $BASH_ENV
            echo "export SLACK_SUCCESS_MESSAGE=':tada: WooCommerce iOS $APP_VERSION has been deployed!'" >> $BASH_ENV 
            bundle exec fastlane build_and_upload_release skip_confirm:true
          no_output_timeout: 60m
      - slack/status:
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false
          webhook: '${SLACK_BUILD_WEBHOOK}'
          failure_message: '${SLACK_FAILURE_MESSAGE}'
          success_message: '${SLACK_SUCCESS_MESSAGE}'

workflows:
  woocommerce_ios:
    jobs:
      - Build Tests
      - Unit Tests:
          requires: [ "Build Tests" ]
      # Always run UI tests on develop and release branches
      - UI Tests:
          name: UI Tests (iPhone 11)
          device: iPhone 11
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
      - UI Tests:
          name: UI Tests (iPad Air 4th generation)
          device: iPad Air \\(4th generation\\)
          post-to-slack: true
          requires: [ "Build Tests" ]
          filters:
            branches:
              only:
                - develop
                - /^release.*/
  #Optionally run UI tests on PRs
  Optional Tests:
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore:
                - develop
                - /^release.*/
      - Build Tests:
          requires: [ "Hold" ]
      - UI Tests:
          name: Optional UI Tests (iPhone 11)
          device: iPhone 11
          requires: [ "Build Tests" ]
      - UI Tests:
          name: Optional UI Tests (iPad Air 4th generation)
          device: iPad Air \\(4th generation\\)
          requires: [ "Build Tests" ]
  Installable Build:
    jobs:
      - Hold:
          type: approval
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - Installable Build:
          requires: [Hold]  
          filters:
            branches:
              ignore: /pull\/[0-9]+/
  Release Build:
    jobs:
      - Release Build: 
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+(\.\d+)*$/ 

